[{"authors":["admin"],"categories":null,"content":"I am a Ph.D. candidate in Committee on Genetics, Genomcis and Systems Biology (GGSB) at The University of Chicago. I took my undergraduate education at University of Chinese Academy of Sciences (UCAS), majoring in Biological Sciences. My main research interests are to use genomics technologies with proper statistical methods to understand how genetic variants affect human complex traits, with a focus on autoimmune diseases.\n","date":1596240000,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1608672559,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"I am a Ph.D. candidate in Committee on Genetics, Genomcis and Systems Biology (GGSB) at The University of Chicago. I took my undergraduate education at University of Chinese Academy of Sciences (UCAS), majoring in Biological Sciences. My main research interests are to use genomics technologies with proper statistical methods to understand how genetic variants affect human complex traits, with a focus on autoimmune diseases.","tags":null,"title":"Zepeng Mu","type":"authors"},{"authors":null,"categories":null,"content":"Sashimi plot is a powerful and popular way to visualize mRNA alternative splicing. However, there are not many tools that are designed to generate this type of plots, except for few ones like MISO, ggSashimi and splicePlot. Moreoever, existing tools tend to have at least one of the following shortcomings: (1) tools dedicated to mRNA splicing like MISO do not allow for plotting Sashimi together with other types of genomic data, such as bigwig and bed files; (2) tools may require an annotation for extracting junctions, making them unsuitable for annotation-free methods like Leafcutter.\nMotivated by these limitations, I developed a script based on the infrastructure of the Python package PyGenomeTracks. This script is not a stand-alone tool, instead it is a custom track class that is adapted from existing track classes (such as bigwig and links tracks) from PyGenomeTracks.\nThe scripts can be found on GitHub. To use this tool, follow the steps below:\nInstall PyGenomeTracks Installation guides can be found in the original PyGenomeTracks repository or documentation.\nClone this repo to your local computer. $ git clone https://github.com/Zepeng-Mu/pyGenomeTracks.git  Figure out where your PyGenomeTracks package is installed. Python packages are installed in a specific folder, depending whether you used pip or conda to install the package. For example, on the high-performance computing system I\u0026rsquo;m using, the package is installed here: ~/.local/lib/python3.7/site-packages/pygenometracks/. The structure of this folder looks like:\n. ├── getAllDefaultsAndPossible.py ├── __init__.py ├── makeTracksFile.py ├── plotTracks.py ├── __pycache__ │ ├── getAllDefaultsAndPossible.cpython-37.pyc │ ├── __init__.cpython-37.pyc │ ├── makeTracksFile.cpython-37.pyc │ ├── plotTracks.cpython-37.pyc │ ├── readBed.cpython-37.pyc │ ├── readGtf.cpython-37.pyc │ ├── tracksClass.cpython-37.pyc │ ├── utilities.cpython-37.pyc │ └── _version.cpython-37.pyc ├── readBed.py ├── readGtf.py ├── tracks │ ├── BedGraphMatrixTrack.py │ ├── BedGraphTrack.py │ ├── BedTrack.py │ ├── BigWigTrack.py │ ├── EpilogosTrack.py │ ├── GenomeTrack.py │ ├── GtfTrack.py │ ├── HiCMatrixTrack.py │ ├── HLinesTrack.py │ ├── __init__.py │ ├── LinksTrack.py │ ├── NarrowPeakTrack.py │ ├── __pycache__ │ ├── ScaleBarTrack.py │ └── TADsTrack.py ├── tracksClass.py ├── utilities.py └── _version.py 3 directories, 35 files  The tracks directory is the key folder here. This is where all the track classes in PyGenomeTracks files are located. Track classes can only be recognized in the .ini file if the corresponding track class is located in this folder. This is also the place where we can put customized track classes. For more details see here.\nCopy SashimiBigwig track class to tracks folder Suppose you are in the folder for this cloned repo (NOT the installed PyGenomeTracks package):\ncp pygenometracks/tracks/SashimiBigwig.py \u0026lt;PyGenomeTracks installation path\u0026gt;/tracks/  Prepare input files In order to generate Sashimi plot, two types of files are needed.\n Bigwig files for RNA-seq coverage. These are just bigwig files that you would normally for the bigwig track class. Link files for junctions to plot and labels. This looks like the file for the original links track class, with an additional column at the end: the number on the label (could be the number of split reads supporting the junction or PSI calculated from a certain tool.) An example file looks like this:  chr2 231109786 231109786 chr2 231110578 231110578 0.0372936854616429 chr2 231109786 231109786 chr2 231112631 231112631 0.0597340361211572 chr2 231109795 231109795 chr2 231110578 231110578 0.178226805210714 chr2 231109795 231109795 chr2 231112631 231112631 0.126256827523686 chr2 231110655 231110655 chr2 231111964 231111964 0.0149937309749814 chr2 231110655 231110655 chr2 231112631 231112631 0.195029646753571 chr2 231110655 231110655 chr2 231113600 231113600 0.0239748059030143 chr2 231112780 231112780 chr2 231113600 231113600 0.390030949667857  The column names are: chr_intron_start, pos_start, pos_start, chr_intron_end, pos_end, pos_end, psi (this is just for you to understand the file, column names should not be included in the link file).\nMake a .ini file: An example section in the .ini file:\ntitle = # Path to bigwig file bw_file = # Path to links file link_file = height = 0.8 bw_color = number_of_bins = max_value = nans_to_zeros = true summary_method = mean show_data_range = true link_color = line_style = fontsize = 2 # The link in Sashimi plot is a Bezier curve. # The height of the curve is calculated from the length of the intron. # When the y-axis in bigwig track is different, the height of curve needs to be scaled. scale_link_height = 1 # The line width for links is proportion to the numbers at the last column in links file (PSI). # But the absolute width is calculated from the supplied numbers, which can look too thin or too wide sometimes. # Use scale_line_width to scale the absolute line widths. # You may need to try several values to get a satisfying result. scale_line_width = 3 file_type = sashimiBigWig  Run pygenometracks as you normally do to generate the figure If you want to try the example provided, go to the cloned repo, then:\ncd example_sashimi pyGenomeTracks --tracks chr2-231091223_231109786_231113600.ini --region chr2:231107879-231115507 -t 'chr2:231109786-231113600 (sQTL = 2:231091223, ALT=G)' --width 9 --trackLabelFraction 0.01 -out example.pdf --fontSize 4  The resulting plot example.png looks like this:\nThis example shows a splicing QTL (sQTL) for gene SP140. The three tracks 0, 1, and 2 represents average RNA-seq coverage for individuals with 0, 1, and 2 alternative allele (G) for SNP chr2:231091223. To generate similar plots on your data, you will need a custom script that calculate average coverage from a group of samples with the same genotype at a given position. Of course, you can also group samples by any other criteria that fits your needs, for instance combining by treatment and control.\nCitation Please refer to the original pyGenomeTracks paper:\nFidel Ramírez, Vivek Bhardwaj, Laura Arrigoni, Kin Chung Lam, Björn A. Grüning, José Villaveces, Bianca Habermann, Asifa Akhtar \u0026amp; Thomas Manke. High-resolution TADs reveal DNA sequences underlying genome organization in flies. Nature Communications (2018) doi:10.1038/s41467-017-02525-w\n","date":1611554400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1613023200,"objectID":"b82126ff52ed82717e26f7b02350e1a9","permalink":"https://zepengmu.netlify.app/blog/sashimi-pygenometracks/","publishdate":"2021-01-25T00:00:00-06:00","relpermalink":"/blog/sashimi-pygenometracks/","section":"blog","summary":"Using the custom sashimiBigwig track class to generate Sashimi plots in the framework of pyGenomeTracks.","tags":null,"title":"Generate Sashimi plot using pyGenomeTracks","type":"blog"},{"authors":["Zepeng Mu","Wei Wei","Benjamin Jung Fair","Jinlin Miao","Ping Zhu","Yang I Li"],"categories":[],"content":"  ","date":1596240000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1600973615,"objectID":"498c58439e585afbb4f2297c6b740441","permalink":"https://zepengmu.netlify.app/publication/mu-2020-impact/","publishdate":"2020-09-24T18:53:32.261929Z","relpermalink":"/publication/mu-2020-impact/","section":"publication","summary":"The effects of trait-associated variants are often studied in a single relevant cell-type or context. However, for many complex traits, multiple cell-types are involved. This applies particularly to immune-related traits, for which many immune cell-types and contexts play a role. Here, we studied the impact of immune gene regulatory variants on complex traits to better understand genetic risk mediated through immune cell-types. We identified 26,271 expression quantitative trait loci (QTLs) and 23,121 splicing QTLs in 18 immune cell-types, and analyzed their overlap with trait-associated loci from 72 genome-wide association studies (GWAS). We showed that effects on RNA expression and splicing in immune cells colocalize with an average of 40.4% and 27.7% GWAS loci for immune-related and non-immune traits, respectively. Notably, we found that a large number of loci (mean: 14%) colocalize with splicing QTLs but not expression QTLs. The 60% GWAS loci without colocalization harbor genes that have lower expression levels, are less tolerant to loss-of-function mutations, and more enhancerrich than genes at colocalized loci. To further investigate the 60% GWAS loci not explained by our regulatory QTLs, we collected H3K27ac CUT\u0026Tag data from rheumatoid arthritis (RA) and healthy controls. We found several unexplained GWAS hits lying within regions with higher H3K27ac activity in RA patients. We also observed that enrichment of RA GWAS heritability is greater in H3K27ac regions in immune cell-types from RA patients compared to healthy controls. Our study paves the way for future QTL studies to elucidate the mechanisms of as yet unexplained GWAS loci.","tags":[],"title":"Impact of cell-type and context-dependent regulatory variants on human immune traits","type":"publication"},{"authors":["Briana E Mittleman","Sebastian Pott","Shane Warland","Tony Zeng","Zepeng Mu","Mayher Kaur","Yoav Gilad","Yang I Li"],"categories":null,"content":" ","date":1593043200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593043200,"objectID":"a4e1d37ae119c96a16f38988d14f6e95","permalink":"https://zepengmu.netlify.app/publication/apaqtl/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/apaqtl/","section":"publication","summary":"Little is known about co-transcriptional or post-transcriptional regulatory mechanisms linking noncoding variation to variation in organismal traits. To begin addressing this gap, we used 3’ Seq to study the impact of genetic variation on alternative polyadenylation (APA) in the nuclear and total mRNA fractions of 52 HapMap Yoruba human lymphoblastoid cell lines. We mapped 602 APA quantitative trait loci (apaQTLs) at 10% FDR, of which 152 were nuclear specific. Effect sizes at intronic apaQTLs are negatively correlated with eQTL effect sizes. These observations suggest genetic variants can decrease mRNA expression levels by increasing usage of intronic PAS. We also identified 24 apaQTLs associated with protein levels, but not mRNA expression. Finally, we found that 19% of apaQTLs can be associated with disease. Thus, our work demonstrates that APA links genetic variation to variation in gene expression, protein expression, and disease risk, and reveals uncharted modes of genetic regulation.","tags":null,"title":"Alternative polyadenylation mediates genetic regulation of gene expression","type":"publication"},{"authors":["Mengjie Chen","Qi Zhan","Zepeng Mu","Lili Wang","Zhaohui Zheng","Jinlin Miao","Ping Zhu","Yang I Li"],"categories":[],"content":"  ","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1600268369,"objectID":"85e22065018dc4392c8d5c3ccae0358f","permalink":"https://zepengmu.netlify.app/publication/chen-2020-alignment/","publishdate":"2020-09-16T14:59:27.574858Z","relpermalink":"/publication/chen-2020-alignment/","section":"publication","summary":"Single-cell RNA sequencing (scRNA-seq) technology is poised to replace bulk cell RNA sequencing for most biological and medical applications as it allows users to measure gene expression levels in a cell-type-specific manner. However, data produced by scRNA-seq often exhibit batch effects that can be specific to a cell-type, to a sample, or to an experiment, which prevent integration or comparisons across multiple experiments. Here, we present Dmatch, a method that leverages an external expression atlas of human primary cells and kernel density matching to align multiple scRNA-seq experiments for downstream biological analysis. Dmatch facilitates alignment of scRNA-seq datasets with cell-types that may overlap only partially, and thus allows integration of multiple distinct scRNA-seq experiments to extract biological insights. In simulation, Dmatch compares favorably to other alignment methods, both in terms of reducing sample-specific clustering, and in terms of avoiding over-correction. When applied to scRNA-seq data collected from clinical samples in a healthy individual and five autoimmune disease patients, Dmatch enabled cell-type-specific differential gene expression comparisons across biopsy sites and disease conditions, and uncovered a shared population of pro-inflammatory monocytes across biopsy sites in RA patients. We further show that Dmatch increases the number of eQTLs mapped from population scRNA-seq data. Dmatch is fast, scalable, and improves the utility of scRNA-seq for several important applications. Dmatch is freely available online (https://qzhan321.github.io/dmatch/).","tags":[],"title":"Alignment of single-cell RNA-seq samples without over-correction using kernel density matching","type":"publication"},{"authors":["Haley E Randolph","Zepeng Mu","Jessica K Fiege","Beth K Thielen","Jean-Christophe Grenier","Mari S Cobb","Julie G Hussin","Yang I Li","Ryan A Langlois","Luis B Barreiro"],"categories":[],"content":"  ","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1608672559,"objectID":"b00f46b7edae75fddf534f3b7f2bc5e3","permalink":"https://zepengmu.netlify.app/publication/randolph-2020-12-21-423830/","publishdate":"2020-12-22T21:29:19.18149Z","relpermalink":"/publication/randolph-2020-12-21-423830/","section":"publication","summary":"Humans vary in their susceptibility to infectious disease, partly due to variation in the immune response following infection. Here, we used single-cell RNA-sequencing to quantify genetic contributions to this variation in peripheral blood mononuclear cells, focusing specifically on the transcriptional response to influenza infection. We find that monocytes are the most responsive to influenza infection, but that all cell types mount a conserved interferon response, which is stronger in individuals with increased European ancestry. By comparing European American and African American individuals, we show that genetic ancestry effects on expression are common, influencing 29% of genes, but highly cell type specific. Further, we demonstrate that much of this population-associated expression variation is explained by cis expression quantitative trait loci, which are enriched for signatures of recent positive selection. Our findings establish common cis-regulatory variants -- including those that are differentiated by genetic ancestry -- as important determinants of the antiviral immune response.Competing Interest StatementThe authors have declared no competing interest.","tags":[],"title":"Single-cell RNA-sequencing reveals pervasive but highly cell type-specific genetic ancestry effects on the response to viral infection","type":"publication"},{"authors":null,"categories":null,"content":"","date":1553817600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1553817600,"objectID":"f1e067ee83f0a3ccf22fe3cd0a562336","permalink":"https://zepengmu.netlify.app/mypublication/","publishdate":"2019-03-29T00:00:00Z","relpermalink":"/mypublication/","section":"","summary":"","tags":null,"title":"Publications","type":"widget_page"},{"authors":null,"categories":[],"content":" In this blog post, I use ggplot() to plot a legend for chromHMM annotation.\nchromHMM uses a Hidden Markov Model to integrate a range of epigenetic markers and predicts the chromatin states, like Transcription Start Sites or enhancers.\nThe table I use here comes from website: ROADMAP epigenetics project web portal. I copied the table from the website and saved it in a file called “coreChromHMM.txt”. The headers of the table are “STATE.NO.”, “MNEMONIC”, “DESCRIPTION” , “COLOR.NAME” “COLOR.CODE”.\nlibrary(tidyverse) core \u0026lt;- read.table(\u0026quot;coreChromHMM.txt\u0026quot;, header = T, stringsAsFactors = F, sep = \u0026quot;\\t\u0026quot;) Taking a look at the table we see that the colors are coded in RGB format. I use spread() function from tidyverse package to spread the color column into 3 columns, for red, green, and blue respectively. Then I use rgb() function to convert the colors into HEX format.\ncore \u0026lt;- core %\u0026gt;% separate(COLOR.CODE, c(\u0026quot;Red\u0026quot;, \u0026quot;Green\u0026quot;, \u0026quot;Blue\u0026quot;), sep = \u0026quot;,\u0026quot;) hexCol = rgb(core$Red, core$Green, core$Blue, maxColorValue = 255) names(hexCol) = core$DESCRIPTION geom_tile() is used to produce the “boxes”, and I use geom_text() to add texts those boxes, or tiles.\nggplot(core, aes(x = 1, y = max(STATE.NO.) - STATE.NO., fill = DESCRIPTION)) + geom_tile() + geom_text(aes(label = DESCRIPTION), size = 8) + scale_fill_manual(values = hexCol) + theme_void() + theme(legend.position = \u0026quot;none\u0026quot;) The resulting graph looks like this and is readily available to use in a paper manuscript!\n","date":1550016000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1550016000,"objectID":"a6b3741f8ca285e46224c69f0d99ddbe","permalink":"https://zepengmu.netlify.app/blog/test/","publishdate":"2019-02-13T00:00:00Z","relpermalink":"/blog/test/","section":"blog","summary":"Using geom_tile to plot chromHMM legend.","tags":[],"title":"Drawing chromHMM legend with ggplot2","type":"blog"},{"authors":["Matthew R Trendowski","Omar El-Charif","Mark J Ratain","Patrick Monahan","Zepeng Mu","Heather E Wheeler","Paul C Dinh","Darren R Feldman","Shirin Ardeshir-Rouhani-Fard","Robert J Hamilton","David J. Vaughn","Chunkit Fung","Christian Kollmannsberger","Taisei Mushiroda","Michiaki Kubo","Robyn Hannigan","Frederick Strathmann","Lawrence H. Einhorn","Sophie D. Fossa","Lois B. Travis","Eileen M. Dolan"],"categories":[],"content":"  ","date":1546300800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1600267443,"objectID":"cdc2b024b6ca20c5f9b6d2d74eebc83f","permalink":"https://zepengmu.netlify.app/publication/trendowski-2019-clinical/","publishdate":"2020-09-16T14:43:59.921814Z","relpermalink":"/publication/trendowski-2019-clinical/","section":"publication","summary":"**Purpose**: Serum platinum is measurable for years after completion of cisplatin-based chemotherapy (CBC). We report the largest investigation of serum platinum levels to date of 1,010 testicular cancer survivors (TCS) assessed 1–35 years after CBC and evaluate genetic contributions to these levels.\n\n**Experimental Design**: Eligible TCS given 300 or 400 (±15) mg/m2 cisplatin underwent extensive audiometric testing, clinical examination, completed questionnaires, and had crude serum platinum levels measured. Associations between serum platinum and various risk factors and toxicities were assessed after fitting a biexponential model adjusted for follow-up time and cumulative cisplatin dose. A genome-wide association study (GWAS) was performed using the serum platinum residuals of the dose and time-adjusted model.\n\n**Results**: Serum platinum levels exceeded the reference range for approximately 31 years, with a strong inverse relationship with creatinine clearance at follow-up (age-adjusted P = 2.13 × 10−3). We observed a significant, positive association between residual platinum values and luteinizing hormone (age-adjusted P = 6.58 × 10−3). Patients with high residual platinum levels experienced greater Raynaud phenomenon than those with medium or low levels (age-adjusted ORhigh/low = 1.46; P = 0.04), as well as a higher likelihood of developing tinnitus (age-adjusted ORhigh/low = 1.68, P = 0.07). GWAS identified one single-nucleotide polymorphism (SNP) meeting genome-wide significance, rs1377817 (P = 4.6 × 10−8, a SNP intronic to MYH14).\n\n**Conclusions**: This study indicates that residual platinum values are correlated with several cisplatin-related toxicities. One genetic variant is associated with these levels.","tags":[],"title":"Clinical and genome-wide analysis of serum platinum levels after cisplatin-based chemotherapy","type":"publication"},{"authors":["Zepeng Mu","Zhuoning Zou","Ye Yang","Wenbo Wang","Yue Xu","Jianyi Huang","Ruiling Cai","Ye Liu","Yajin Mo","Boyi Wang","Yiqun Dang","Yongming Li","Yushan Liu","Yueren Jiang","Qingyang Tan","Xiaohong Liu","Cheng Hu","Hua Li","Sha Wei","Chunbo Lou","Yang Yu","Jiangyun Wang"],"categories":null,"content":"  --  ","date":1535760000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1535760000,"objectID":"8242bd1b58dcdaa1ca825f9e2f4b83f0","permalink":"https://zepengmu.netlify.app/publication/igem-2016/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/igem-2016/","section":"publication","summary":"Due to the abuse of antibiotics, antibiotic residues can be detected in both natural environment and various industrial products, posing threat to the environment and human health. Here we describe the design and implementation of an engineered Escherichia coli capable of degrading tetracycline (Tc)-one of the commonly used antibiotics once on humans and now on poultry, cattle and fisheries. A Tc-degrading enzyme, TetX, from the obligate anaerobe Bacteroides fragilis was cloned and recombinantly expressed in E. coli and fully characterized, including its Km and kcat value. We quantitatively evaluated its activity both in vitro and in vivo by UV–Vis spectrometer and LC-MS. Moreover, we used a tetracycline inducible amplification circuit including T7 RNA polymerase and its specific promoter PT7 to enhance the expression level of TetX, and studied the dose-response of TetX under different inducer concentrations. Since the deployment of genetically modified organisms (GMOs) outside laboratory brings about safety concerns, it is necessary to explore the possibility of integrating a kill-switch. Toxin-Antitoxin (TA) systems were used to construct a mutually dependent host-plasmid platform and biocontainment systems in various academic and industrious situations. We selected nine TA systems from various bacteria strains and measured the toxicity of toxins (T) and the detoxifying activity of cognate antitoxins (A) to validate their potential to be used to build a kill-switch. These results prove the possibility of using engineered microorganisms to tackle antibiotic residues in environment efficiently and safely.","tags":null,"title":"A genetically engineered Escherichia coli that senses and degrades tetracycline antibiotic residue","type":"publication"}]