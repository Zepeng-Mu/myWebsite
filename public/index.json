[{"authors":["admin"],"categories":null,"content":"This is the personal website of Zepeng Mu. My English nickname is Phoenix. I took my undergraduate education at University of Chinese Academy of Sciences (UCAS), and I majored in Biological Sciences. I am now a Ph.D. student in Committee of Genetics, Genomcis, and Systems Biology (GGSB) at The University of Chicago. My major interest is to use genomics technologies with proper statistical methods to investigate human genome.\n","date":-62135596800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"598b63dd58b43bce02403646f240cd3c","permalink":"https://zepengmu.netlify.com/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"author","summary":"This is the personal website of Zepeng Mu. My English nickname is Phoenix. I took my undergraduate education at University of Chinese Academy of Sciences (UCAS), and I majored in Biological Sciences. I am now a Ph.D. student in Committee of Genetics, Genomcis, and Systems Biology (GGSB) at The University of Chicago. My major interest is to use genomics technologies with proper statistical methods to investigate human genome.","tags":null,"title":"Zepeng (Phoenix) Mu","type":"author"},{"authors":null,"categories":[],"content":" In this blog post, I use ggplot() to plot a legend for chromHMM annotation.\nchromHMM uses a Hidden Markov Model to integrate a range of epigenetic markers and predicts the chromatin states, like Transcription Start Sites or enhancers.\nThe table I use here comes from website: ROADMAP epigenetics project web portal. I copied the table from the website and saved it in a file called “coreChromHMM.txt”. The headers of the table are “STATE.NO.”, “MNEMONIC”, “DESCRIPTION” , “COLOR.NAME” “COLOR.CODE”.\nlibrary(tidyverse) core \u0026lt;- read.table(\u0026quot;coreChromHMM.txt\u0026quot;, header = T, stringsAsFactors = F, sep = \u0026quot;\\t\u0026quot;) Taking a look at the table we see that the colors are coded in RGB format. I use spread() function from tidyverse package to spread the color column into 3 columns, for red, green, and blue respectively. Then I use rgb() function to convert the colors into HEX format.\ncore \u0026lt;- core %\u0026gt;% separate(COLOR.CODE, c(\u0026quot;Red\u0026quot;, \u0026quot;Green\u0026quot;, \u0026quot;Blue\u0026quot;), sep = \u0026quot;,\u0026quot;) hexCol = rgb(core$Red, core$Green, core$Blue, maxColorValue = 255) names(hexCol) = core$DESCRIPTION geom_tile() is used to produce the “boxes”, and I use geom_text() to add texts those boxes, or tiles.\nggplot(core, aes(x = 1, y = max(STATE.NO.) - STATE.NO., fill = DESCRIPTION)) + geom_tile() + geom_text(aes(label = DESCRIPTION), size = 8) + scale_fill_manual(values = hexCol) + theme_void() + theme(legend.position = \u0026quot;none\u0026quot;) The resulting graph looks like this and is readily available to use in a paper manuscript!\n","date":1550016000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1550016000,"objectID":"95cfab4d0f790f1089eb4e6a388fcbb1","permalink":"https://zepengmu.netlify.com/blog/test/","publishdate":"2019-02-13T00:00:00Z","relpermalink":"/blog/test/","section":"blog","summary":"Using geom_tile to plot chromHMM legend.","tags":[],"title":"Drawing chromHMM legend with ggplot2","type":"blog"},{"authors":null,"categories":null,"content":"Phycllotaxis is a kind of \u0026lsquo;seemingly\u0026rsquo; complex geometric pattern that looks complex but with very simple mathematics behind. It is not uncommon in nature. According to Wikipedia, phycllotaxis \u0026ldquo;is the arrangement of leaves on a plant stem\u0026rdquo; in botany. The following code show how to draw phycllotaxis patterns using ggplot2. The code was modified from a Project called PHYLLOTAXIS: DRAW FLOWERS USING MATHEMATICS on Datacamp.\nlibrary(tidyverse) library(ggplot2) angle \u0026lt;- 31*pi/180 points \u0026lt;- 900 t \u0026lt;- (1:points)*angle x \u0026lt;- sin(t) y \u0026lt;- cos(t) df \u0026lt;- data.frame(t, x, y) options(repr.plot.width = 4, repr.plot.height = 4) p \u0026lt;- ggplot(df, aes(x*t, y*t)) p + geom_point(alpha = 0.8, color = rainbow(points), shape = 16) + theme(title = element_blank(), panel.grid = element_blank(), axis.ticks = element_blank(), axis.text = element_blank(), panel.background = element_rect(fill = \u0026quot;white\u0026quot;), legend.position = \u0026quot;none\u0026quot;)  The resulting figure looks like: By changing the two parameters angle and points in the code above, one can get endless number of phyllotaxis patterns.\n","date":1533877200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1536037200,"objectID":"a43f546f6bbcc4d74e4a38545e83771f","permalink":"https://zepengmu.netlify.com/blog/phyllotaxis/","publishdate":"2018-08-10T00:00:00-05:00","relpermalink":"/blog/phyllotaxis/","section":"blog","summary":"Using R to plot phyllotaxis patterns inspired by Datacamp.","tags":null,"title":"Phyllotaxis with R","type":"blog"},{"authors":null,"categories":null,"content":" R provides us with a graphical tool that is precise, beautiful and easy to learn. Besides academic publishing, R can also be used to do arts. Inspired by some blogs, I also tried to creat something beautiful and interesting by R. I call this \u0026ldquo;boringR\u0026rdquo; and you can find all the code on my Github repo.\nHere I would to share with you some of my codes and my creations.\nColorful Bars In the first example, I use the segments function to draw some colorful bars. The sample function is used to generate random heights of bars.\nmyWidth = 10 myheight = 6 number_of_bars = 30 xStart = seq(-myWidth, myWidth, length.out = number_of_bars) yStartPos = rep(0.5, number_of_bars) yStartNeg = -yStartPos yEndPos = sample(1:myheight, size = number_of_bars, replace = T) yEndNeg = -yEndPos myColPos = rainbow(number_of_bars, alpha = 0.8) myColNeg = rainbow(number_of_bars, alpha = 0.4) # Plot mypar = par(bg = 'black', mar = rep(0.5, 4)) plot.new() plot.window(xlim = c(-myWidth, myWidth), ylim = c(-myWidth, myWidth)) segments(xStart, yStartPos, xStart, yEndPos, col = myColPos, lwd = 12) segments(xStart, yStartNeg, xStart, yEndNeg, col = myColNeg, lwd = 12) # signature legend(\u0026quot;bottomright\u0026quot;, legend=\u0026quot;© Phoenix\u0026quot;, bty = \u0026quot;n\u0026quot;, text.col=\u0026quot;gray70\u0026quot;)  Here, I used rainbow function to generate color for bars, and I used different alpha values in the function to get shadow like effects of the bars.\nThe graph generated by codes above look like:\nColurful Beams myWidth = 5 number_of_points = 50 x0 = rep(-2, number_of_points) y0 = rep(0, number_of_points) xFixed = sin(seq(-myWidth, myWidth, length.out = number_of_points)) yFixed = cos(seq(-myWidth, myWidth, length.out = number_of_points)) xRandom = xFixed + rnorm(number_of_points, mean = 0.6, sd = 2) yRandom = yFixed + rnorm(number_of_points, mean = 0, sd = 2) myLwd = rnorm(number_of_points, mean = 1.3, sd = 0.3) myLty = sample(c(1, 2, 3), number_of_points, replace = T) red = sample(seq(0.4, 1, 0.1), number_of_points, replace = T) green = sample(seq(0, 0.5, 0.1), number_of_points, replace = T) blue = sample(seq(0, 1, 0.1), number_of_points, replace = T) mypar = par(bg = 'black', mar = rep(0.5, 4)) plot.new() plot.window(xlim = c(-myWidth, myWidth), ylim = c(-myWidth, myWidth), asp = 1) segments(x0, y0, xRandom, yRandom, lwd = myLwd, col = rgb(red, green, blue)) legend(\u0026quot;bottomright\u0026quot;, legend=\u0026quot;© Phoenix\u0026quot;, bty = \u0026quot;n\u0026quot;, text.col=\u0026quot;gray70\u0026quot;)  Here I used rgb function to generate colors. Moreover, the values for red, green and blue were sampled from a given range. For instance, red can only range from 0.4 to 1. This makes the beams look \u0026ldquo;reddish\u0026rdquo;.\nColorful Curves Curves with surprsing shapes can be created by several variables and trigonometric functions.\nFor instance:\ntheta = seq(-pi, pi, length = 80) a = sin(theta) x = scale(a ^ 2, center = 0, scale = F) y = cos(theta) - 0.8*sin(theta)  This code chunk is the most important since it determine the overall shape of our curve. By changing how x and y are calculated from theta, we can change the shape of the curve quite dramatically.\nnumber_of_curves = 20 red = sample(seq(0.5, 1, 0.1), number_of_curves, replace = T) green = sample(seq(0, 0.5, 0.1), number_of_curves, replace = T) blue = sample(seq(0.5, 1, 0.1), number_of_curves, replace = T) myCol = rgb(red, green, blue, alpha = 0.5) shrink = seq(0.1, 1, length.out = number_of_curves) mypar = par(bg = 'black', mar = rep(0.5, 4)) plot.new() plot.window(xlim = range(c(-x, x)), ylim = range(y)) for (i in 1:number_of_curves) { lines(x * shrink[i],y * shrink[i], col = myCol[i], lwd = 2) } for (i in 1:number_of_curves) { lines(-x * shrink[i], y * shrink[i], col = myCol[i], lwd = 2) } legend(\u0026quot;bottomright\u0026quot;, legend=\u0026quot;© Phoenix\u0026quot;, bty = \u0026quot;n\u0026quot;, text.col=\u0026quot;gray70\u0026quot;)  There is one more thing that I want say. One can always add randnomness into the graph to make them look better. The use of random colors is one of them. You can also set random line widths or line types to make the graph different.\nLast but not least, to learn more about R, I recommend r-bloggers.com.\n","date":1533877200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1533877200,"objectID":"90d7d2950617f32cb45b03a6fa116747","permalink":"https://zepengmu.netlify.com/blog/boringr/","publishdate":"2018-08-10T00:00:00-05:00","relpermalink":"/blog/boringr/","section":"blog","summary":"Using R to plot amazing artistic graphs.","tags":null,"title":"boringR: drawing with R","type":"blog"},{"authors":null,"categories":null,"content":"google-site-verification: google6b3ce40aa47a7f94.html","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"033f44eea98f95c687c45d615a628fbf","permalink":"https://zepengmu.netlify.com/google6b3ce40aa47a7f94/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/google6b3ce40aa47a7f94/","section":"","summary":"google-site-verification: google6b3ce40aa47a7f94.","tags":null,"title":"","type":"page"}]