[{"authors":["admin"],"categories":null,"content":"This is the personal website of Zepeng Mu. My English nickname is Phoenix. I am now a Ph.D. student in Committee of Genetics, Genomcis, and Systems Biology (GGSB) at The University of Chicago. I took my undergraduate education at University of Chinese Academy of Sciences (UCAS) majoring in Biological Sciences. My major interest is to use genomics technologies with proper statistical methods to understand how genetics variants affect human complex traits, including autoimmune diseases.\n","date":1596240000,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1600973615,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://zepengmu.netlify.app/author/zepeng-mu/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/zepeng-mu/","section":"authors","summary":"This is the personal website of Zepeng Mu. My English nickname is Phoenix. I am now a Ph.D. student in Committee of Genetics, Genomcis, and Systems Biology (GGSB) at The University of Chicago. I took my undergraduate education at University of Chinese Academy of Sciences (UCAS) majoring in Biological Sciences. My major interest is to use genomics technologies with proper statistical methods to understand how genetics variants affect human complex traits, including autoimmune diseases.","tags":null,"title":"Zepeng Mu","type":"authors"},{"authors":["Zepeng Mu","Wei Wei","Benjamin Jung Fair","Jinlin Miao","Ping Zhu","Yang I Li"],"categories":[],"content":"  ","date":1596240000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1600973615,"objectID":"498c58439e585afbb4f2297c6b740441","permalink":"https://zepengmu.netlify.app/publication/mu-2020-impact/","publishdate":"2020-09-24T18:53:32.261929Z","relpermalink":"/publication/mu-2020-impact/","section":"publication","summary":"The effects of trait-associated variants are often studied in a single relevant cell-type or context. However, for many complex traits, multiple cell-types are involved. This applies particularly to immune-related traits, for which many immune cell-types and contexts play a role. Here, we studied the impact of immune gene regulatory variants on complex traits to better understand genetic risk mediated through immune cell-types. We identified 26,271 expression quantitative trait loci (QTLs) and 23,121 splicing QTLs in 18 immune cell-types, and analyzed their overlap with trait-associated loci from 72 genome-wide association studies (GWAS). We showed that effects on RNA expression and splicing in immune cells colocalize with an average of 40.4% and 27.7% GWAS loci for immune-related and non-immune traits, respectively. Notably, we found that a large number of loci (mean: 14%) colocalize with splicing QTLs but not expression QTLs. The 60% GWAS loci without colocalization harbor genes that have lower expression levels, are less tolerant to loss-of-function mutations, and more enhancerrich than genes at colocalized loci. To further investigate the 60% GWAS loci not explained by our regulatory QTLs, we collected H3K27ac CUT\u0026Tag data from rheumatoid arthritis (RA) and healthy controls. We found several unexplained GWAS hits lying within regions with higher H3K27ac activity in RA patients. We also observed that enrichment of RA GWAS heritability is greater in H3K27ac regions in immune cell-types from RA patients compared to healthy controls. Our study paves the way for future QTL studies to elucidate the mechanisms of as yet unexplained GWAS loci.","tags":[],"title":"Impact of cell-type and context-dependent regulatory variants on human immune traits","type":"publication"},{"authors":["Briana E Mittleman","Sebastian Pott","Shane Warland","Tony Zeng","Zepeng Mu","Mayher Kaur","Yoav Gilad","Yang I Li"],"categories":null,"content":" ","date":1593043200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593043200,"objectID":"a4e1d37ae119c96a16f38988d14f6e95","permalink":"https://zepengmu.netlify.app/publication/apaqtl/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/apaqtl/","section":"publication","summary":"Little is known about co-transcriptional or post-transcriptional regulatory mechanisms linking noncoding variation to variation in organismal traits. To begin addressing this gap, we used 3’ Seq to study the impact of genetic variation on alternative polyadenylation (APA) in the nuclear and total mRNA fractions of 52 HapMap Yoruba human lymphoblastoid cell lines. We mapped 602 APA quantitative trait loci (apaQTLs) at 10% FDR, of which 152 were nuclear specific. Effect sizes at intronic apaQTLs are negatively correlated with eQTL effect sizes. These observations suggest genetic variants can decrease mRNA expression levels by increasing usage of intronic PAS. We also identified 24 apaQTLs associated with protein levels, but not mRNA expression. Finally, we found that 19% of apaQTLs can be associated with disease. Thus, our work demonstrates that APA links genetic variation to variation in gene expression, protein expression, and disease risk, and reveals uncharted modes of genetic regulation.","tags":null,"title":"Alternative polyadenylation mediates genetic regulation of gene expression","type":"publication"},{"authors":["Mengjie Chen","Qi Zhan","Zepeng Mu","Lili Wang","Zhaohui Zheng","Jinlin Miao","Ping Zhu","Yang I Li"],"categories":[],"content":"  ","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1600268369,"objectID":"85e22065018dc4392c8d5c3ccae0358f","permalink":"https://zepengmu.netlify.app/publication/chen-2020-alignment/","publishdate":"2020-09-16T14:59:27.574858Z","relpermalink":"/publication/chen-2020-alignment/","section":"publication","summary":"Single-cell RNA sequencing (scRNA-seq) technology is poised to replace bulk cell RNA sequencing for most biological and medical applications as it allows users to measure gene expression levels in a cell-type-specific manner. However, data produced by scRNA-seq often exhibit batch effects that can be specific to a cell-type, to a sample, or to an experiment, which prevent integration or comparisons across multiple experiments. Here, we present Dmatch, a method that leverages an external expression atlas of human primary cells and kernel density matching to align multiple scRNA-seq experiments for downstream biological analysis. Dmatch facilitates alignment of scRNA-seq datasets with cell-types that may overlap only partially, and thus allows integration of multiple distinct scRNA-seq experiments to extract biological insights. In simulation, Dmatch compares favorably to other alignment methods, both in terms of reducing sample-specific clustering, and in terms of avoiding over-correction. When applied to scRNA-seq data collected from clinical samples in a healthy individual and five autoimmune disease patients, Dmatch enabled cell-type-specific differential gene expression comparisons across biopsy sites and disease conditions, and uncovered a shared population of pro-inflammatory monocytes across biopsy sites in RA patients. We further show that Dmatch increases the number of eQTLs mapped from population scRNA-seq data. Dmatch is fast, scalable, and improves the utility of scRNA-seq for several important applications. Dmatch is freely available online (https://qzhan321.github.io/dmatch/).","tags":[],"title":"Alignment of single-cell RNA-seq samples without over-correction using kernel density matching","type":"publication"},{"authors":null,"categories":null,"content":"","date":1553817600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1553817600,"objectID":"f1e067ee83f0a3ccf22fe3cd0a562336","permalink":"https://zepengmu.netlify.app/mypublication/","publishdate":"2019-03-29T00:00:00Z","relpermalink":"/mypublication/","section":"","summary":"","tags":null,"title":"Publications","type":"widget_page"},{"authors":null,"categories":[],"content":" In this blog post, I use ggplot() to plot a legend for chromHMM annotation.\nchromHMM uses a Hidden Markov Model to integrate a range of epigenetic markers and predicts the chromatin states, like Transcription Start Sites or enhancers.\nThe table I use here comes from website: ROADMAP epigenetics project web portal. I copied the table from the website and saved it in a file called “coreChromHMM.txt”. The headers of the table are “STATE.NO.”, “MNEMONIC”, “DESCRIPTION” , “COLOR.NAME” “COLOR.CODE”.\nlibrary(tidyverse) core \u0026lt;- read.table(\u0026quot;coreChromHMM.txt\u0026quot;, header = T, stringsAsFactors = F, sep = \u0026quot;\\t\u0026quot;) Taking a look at the table we see that the colors are coded in RGB format. I use spread() function from tidyverse package to spread the color column into 3 columns, for red, green, and blue respectively. Then I use rgb() function to convert the colors into HEX format.\ncore \u0026lt;- core %\u0026gt;% separate(COLOR.CODE, c(\u0026quot;Red\u0026quot;, \u0026quot;Green\u0026quot;, \u0026quot;Blue\u0026quot;), sep = \u0026quot;,\u0026quot;) hexCol = rgb(core$Red, core$Green, core$Blue, maxColorValue = 255) names(hexCol) = core$DESCRIPTION geom_tile() is used to produce the “boxes”, and I use geom_text() to add texts those boxes, or tiles.\nggplot(core, aes(x = 1, y = max(STATE.NO.) - STATE.NO., fill = DESCRIPTION)) + geom_tile() + geom_text(aes(label = DESCRIPTION), size = 8) + scale_fill_manual(values = hexCol) + theme_void() + theme(legend.position = \u0026quot;none\u0026quot;) The resulting graph looks like this and is readily available to use in a paper manuscript!\n","date":1550016000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1550016000,"objectID":"95cfab4d0f790f1089eb4e6a388fcbb1","permalink":"https://zepengmu.netlify.app/blog/test/","publishdate":"2019-02-13T00:00:00Z","relpermalink":"/blog/test/","section":"blog","summary":"Using geom_tile to plot chromHMM legend.","tags":[],"title":"Drawing chromHMM legend with ggplot2","type":"blog"},{"authors":["Matthew R Trendowski","Omar El-Charif","Mark J Ratain","Patrick Monahan","Zepeng Mu","Heather E Wheeler","Paul C Dinh","Darren R Feldman","Shirin Ardeshir-Rouhani-Fard","Robert J Hamilton","David J. Vaughn","Chunkit Fung","Christian Kollmannsberger","Taisei Mushiroda","Michiaki Kubo","Robyn Hannigan","Frederick Strathmann","Lawrence H. Einhorn","Sophie D. Fossa","Lois B. Travis","Eileen M. Dolan"],"categories":[],"content":"  ","date":1546300800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1600267443,"objectID":"cdc2b024b6ca20c5f9b6d2d74eebc83f","permalink":"https://zepengmu.netlify.app/publication/trendowski-2019-clinical/","publishdate":"2020-09-16T14:43:59.921814Z","relpermalink":"/publication/trendowski-2019-clinical/","section":"publication","summary":"**Purpose**: Serum platinum is measurable for years after completion of cisplatin-based chemotherapy (CBC). We report the largest investigation of serum platinum levels to date of 1,010 testicular cancer survivors (TCS) assessed 1–35 years after CBC and evaluate genetic contributions to these levels.\n\n**Experimental Design**: Eligible TCS given 300 or 400 (±15) mg/m2 cisplatin underwent extensive audiometric testing, clinical examination, completed questionnaires, and had crude serum platinum levels measured. Associations between serum platinum and various risk factors and toxicities were assessed after fitting a biexponential model adjusted for follow-up time and cumulative cisplatin dose. A genome-wide association study (GWAS) was performed using the serum platinum residuals of the dose and time-adjusted model.\n\n**Results**: Serum platinum levels exceeded the reference range for approximately 31 years, with a strong inverse relationship with creatinine clearance at follow-up (age-adjusted P = 2.13 × 10−3). We observed a significant, positive association between residual platinum values and luteinizing hormone (age-adjusted P = 6.58 × 10−3). Patients with high residual platinum levels experienced greater Raynaud phenomenon than those with medium or low levels (age-adjusted ORhigh/low = 1.46; P = 0.04), as well as a higher likelihood of developing tinnitus (age-adjusted ORhigh/low = 1.68, P = 0.07). GWAS identified one single-nucleotide polymorphism (SNP) meeting genome-wide significance, rs1377817 (P = 4.6 × 10−8, a SNP intronic to MYH14).\n\n**Conclusions**: This study indicates that residual platinum values are correlated with several cisplatin-related toxicities. One genetic variant is associated with these levels.","tags":[],"title":"Clinical and genome-wide analysis of serum platinum levels after cisplatin-based chemotherapy","type":"publication"},{"authors":["Zepeng Mu","Zhuoning Zou","Ye Yang","Wenbo Wang","Yue Xu","Jianyi Huang","Ruiling Cai","Ye Liu","Yajin Mo","Boyi Wang","Yiqun Dang","Yongming Li","Yushan Liu","Yueren Jiang","Qingyang Tan","Xiaohong Liu","Cheng Hu","Hua Li","Sha Wei","Chunbo Lou","Yang Yu","Jiangyun Wang"],"categories":null,"content":"  --  ","date":1535760000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1535760000,"objectID":"8242bd1b58dcdaa1ca825f9e2f4b83f0","permalink":"https://zepengmu.netlify.app/publication/igem-2016/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/igem-2016/","section":"publication","summary":"Due to the abuse of antibiotics, antibiotic residues can be detected in both natural environment and various industrial products, posing threat to the environment and human health. Here we describe the design and implementation of an engineered Escherichia coli capable of degrading tetracycline (Tc)-one of the commonly used antibiotics once on humans and now on poultry, cattle and fisheries. A Tc-degrading enzyme, TetX, from the obligate anaerobe Bacteroides fragilis was cloned and recombinantly expressed in E. coli and fully characterized, including its Km and kcat value. We quantitatively evaluated its activity both in vitro and in vivo by UV–Vis spectrometer and LC-MS. Moreover, we used a tetracycline inducible amplification circuit including T7 RNA polymerase and its specific promoter PT7 to enhance the expression level of TetX, and studied the dose-response of TetX under different inducer concentrations. Since the deployment of genetically modified organisms (GMOs) outside laboratory brings about safety concerns, it is necessary to explore the possibility of integrating a kill-switch. Toxin-Antitoxin (TA) systems were used to construct a mutually dependent host-plasmid platform and biocontainment systems in various academic and industrious situations. We selected nine TA systems from various bacteria strains and measured the toxicity of toxins (T) and the detoxifying activity of cognate antitoxins (A) to validate their potential to be used to build a kill-switch. These results prove the possibility of using engineered microorganisms to tackle antibiotic residues in environment efficiently and safely.","tags":null,"title":"A genetically engineered Escherichia coli that senses and degrades tetracycline antibiotic residue","type":"publication"},{"authors":null,"categories":null,"content":"R provides us with a graphical tool that is precise, beautiful and easy to learn. Besides academic publishing, R can also be used to do arts. Inspired by some blogs, I also tried to creat something beautiful and interesting by R. I call this \u0026ldquo;boringR\u0026rdquo; and you can find all the code on my Github repo.\nHere I would to share with you some of my codes and my creations.\nColorful Bars In the first example, I use the segments function to draw some colorful bars. The sample function is used to generate random heights of bars.\nmyWidth = 10 myheight = 6 number_of_bars = 30 xStart = seq(-myWidth, myWidth, length.out = number_of_bars) yStartPos = rep(0.5, number_of_bars) yStartNeg = -yStartPos yEndPos = sample(1:myheight, size = number_of_bars, replace = T) yEndNeg = -yEndPos myColPos = rainbow(number_of_bars, alpha = 0.8) myColNeg = rainbow(number_of_bars, alpha = 0.4) # Plot mypar = par(bg = 'black', mar = rep(0.5, 4)) plot.new() plot.window(xlim = c(-myWidth, myWidth), ylim = c(-myWidth, myWidth)) segments(xStart, yStartPos, xStart, yEndPos, col = myColPos, lwd = 12) segments(xStart, yStartNeg, xStart, yEndNeg, col = myColNeg, lwd = 12) # signature legend(\u0026quot;bottomright\u0026quot;, legend=\u0026quot;© Phoenix\u0026quot;, bty = \u0026quot;n\u0026quot;, text.col=\u0026quot;gray70\u0026quot;)  Here, I used rainbow function to generate color for bars, and I used different alpha values in the function to get shadow like effects of the bars.\nThe graph generated by codes above look like:\nColurful Beams myWidth = 5 number_of_points = 50 x0 = rep(-2, number_of_points) y0 = rep(0, number_of_points) xFixed = sin(seq(-myWidth, myWidth, length.out = number_of_points)) yFixed = cos(seq(-myWidth, myWidth, length.out = number_of_points)) xRandom = xFixed + rnorm(number_of_points, mean = 0.6, sd = 2) yRandom = yFixed + rnorm(number_of_points, mean = 0, sd = 2) myLwd = rnorm(number_of_points, mean = 1.3, sd = 0.3) myLty = sample(c(1, 2, 3), number_of_points, replace = T) red = sample(seq(0.4, 1, 0.1), number_of_points, replace = T) green = sample(seq(0, 0.5, 0.1), number_of_points, replace = T) blue = sample(seq(0, 1, 0.1), number_of_points, replace = T) mypar = par(bg = 'black', mar = rep(0.5, 4)) plot.new() plot.window(xlim = c(-myWidth, myWidth), ylim = c(-myWidth, myWidth), asp = 1) segments(x0, y0, xRandom, yRandom, lwd = myLwd, col = rgb(red, green, blue)) legend(\u0026quot;bottomright\u0026quot;, legend=\u0026quot;© Phoenix\u0026quot;, bty = \u0026quot;n\u0026quot;, text.col=\u0026quot;gray70\u0026quot;)  Here I used rgb function to generate colors. Moreover, the values for red, green and blue were sampled from a given range. For instance, red can only range from 0.4 to 1. This makes the beams look \u0026ldquo;reddish\u0026rdquo;.\nColorful Curves Curves with surprsing shapes can be created by several variables and trigonometric functions.\nFor instance:\ntheta = seq(-pi, pi, length = 80) a = sin(theta) x = scale(a ^ 2, center = 0, scale = F) y = cos(theta) - 0.8*sin(theta)  This code chunk is the most important since it determine the overall shape of our curve. By changing how x and y are calculated from theta, we can change the shape of the curve quite dramatically.\nnumber_of_curves = 20 red = sample(seq(0.5, 1, 0.1), number_of_curves, replace = T) green = sample(seq(0, 0.5, 0.1), number_of_curves, replace = T) blue = sample(seq(0.5, 1, 0.1), number_of_curves, replace = T) myCol = rgb(red, green, blue, alpha = 0.5) shrink = seq(0.1, 1, length.out = number_of_curves) mypar = par(bg = 'black', mar = rep(0.5, 4)) plot.new() plot.window(xlim = range(c(-x, x)), ylim = range(y)) for (i in 1:number_of_curves) { lines(x * shrink[i],y * shrink[i], col = myCol[i], lwd = 2) } for (i in 1:number_of_curves) { lines(-x * shrink[i], y * shrink[i], col = myCol[i], lwd = 2) } legend(\u0026quot;bottomright\u0026quot;, legend=\u0026quot;© Phoenix\u0026quot;, bty = \u0026quot;n\u0026quot;, text.col=\u0026quot;gray70\u0026quot;)  There is one more thing that I want say. One can always add randnomness into the graph to make them look better. The use of random colors is one of them. You can also set random line widths or line types to make the graph different.\nLast but not least, to learn more about R, I recommend r-bloggers.com.\n","date":1533877200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1533877200,"objectID":"90d7d2950617f32cb45b03a6fa116747","permalink":"https://zepengmu.netlify.app/blog/boringr/","publishdate":"2018-08-10T00:00:00-05:00","relpermalink":"/blog/boringr/","section":"blog","summary":"Using R to plot amazing artistic graphs.","tags":null,"title":"boringR: drawing with R","type":"blog"},{"authors":null,"categories":null,"content":"Phycllotaxis is a kind of \u0026lsquo;seemingly\u0026rsquo; complex geometric pattern that looks complex but with very simple mathematics behind. It is not uncommon in nature. According to Wikipedia, phycllotaxis \u0026ldquo;is the arrangement of leaves on a plant stem\u0026rdquo; in botany. The following code show how to draw phycllotaxis patterns using ggplot2. The code was modified from a Project called PHYLLOTAXIS: DRAW FLOWERS USING MATHEMATICS on Datacamp.\nlibrary(tidyverse) library(ggplot2) angle \u0026lt;- 31*pi/180 points \u0026lt;- 900 t \u0026lt;- (1:points)*angle x \u0026lt;- sin(t) y \u0026lt;- cos(t) df \u0026lt;- data.frame(t, x, y) options(repr.plot.width = 4, repr.plot.height = 4) p \u0026lt;- ggplot(df, aes(x*t, y*t)) p + geom_point(alpha = 0.8, color = rainbow(points), shape = 16) + theme(title = element_blank(), panel.grid = element_blank(), axis.ticks = element_blank(), axis.text = element_blank(), panel.background = element_rect(fill = \u0026quot;white\u0026quot;), legend.position = \u0026quot;none\u0026quot;)  The resulting figure looks like: By changing the two parameters angle and points in the code above, one can get endless number of phyllotaxis patterns.\n","date":1533877200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1536037200,"objectID":"a43f546f6bbcc4d74e4a38545e83771f","permalink":"https://zepengmu.netlify.app/blog/phyllotaxis/","publishdate":"2018-08-10T00:00:00-05:00","relpermalink":"/blog/phyllotaxis/","section":"blog","summary":"Using R to plot phyllotaxis patterns inspired by Datacamp.","tags":null,"title":"Phyllotaxis with R","type":"blog"},{"authors":null,"categories":null,"content":"google-site-verification: google6b3ce40aa47a7f94.html","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"033f44eea98f95c687c45d615a628fbf","permalink":"https://zepengmu.netlify.app/google6b3ce40aa47a7f94/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/google6b3ce40aa47a7f94/","section":"","summary":"google-site-verification: google6b3ce40aa47a7f94.","tags":null,"title":"","type":"page"}]